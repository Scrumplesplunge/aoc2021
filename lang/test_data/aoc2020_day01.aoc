import "std/std.aoc" as std;

var buffer: [1024]byte;
var numbers: [200]int64;
var numNumbers: int64;
var set: [2021]byte;

function readInput(): void {
  var length = read(0, &buffer as *void, 1024);
  if length <= 0 { std.die("bad"); }
  if buffer[length - 1] != '\n' { std.die ("bad"); }
  var i: []byte = &buffer;
  var end = i + length;
  while i != end {
    if numNumbers == 200 { std.die("too many"); }
    i = std.readInt(i, &numbers[numNumbers]);
    if numbers[numNumbers] > 2020 { std.die("too large"); }
    set[numbers[numNumbers]] = 1 as byte;
    numNumbers = numNumbers + 1;
    if i[0] != '\n' { std.die("bad"); }
    i = i + 1;
  }
}

function part1(): int64 {
  for var i = 0; i < numNumbers; i = i + 1 {
    if set[2020 - numbers[i]] {
      return numbers[i] * (2020 - numbers[i]);
    }
  }
  std.die("not found");
}

function part2(): int64 {
  for var i = 0; i < numNumbers; i = i + 1 {
    var remaining: int64;
    remaining = 2020 - numbers[i];
    for var j = i + 1; j < numNumbers; j = j + 1 {
      if numbers[j] > remaining {
        j = j + 1;
        continue;
      }
      var numK = remaining - numbers[j];
      if set[numK] {
        return numbers[i] * numbers[j] * numK;
      }
    }
  }
  std.die("not found");
}

function main(): int64 {
  readInput();
  std.printInt(part1());
  std.printInt(part2());
}
